plugins {
    id 'fabric-loom' version '0.9-SNAPSHOT'
    id 'io.github.juuxel.loom-quiltflower' version '1.2.0'
    id 'maven-publish'
    id 'org.cadixdev.licenser' version '0.6.1'
}

sourceCompatibility = JavaVersion.VERSION_16
targetCompatibility = JavaVersion.VERSION_16

archivesBaseName = project.archives_base_name
version = project.mod_version + '+' + project.minecraft_version
group = project.maven_group

if (file('private.gradle').exists()) {
    apply from: 'private.gradle'
}

repositories {
    maven {
        name = "BuildCraft"
        url = "https://mod-buildcraft.com/maven"
    }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modApi(group: "alexiil.mc.lib", name: "libmultipart-all", version: project.libmultipart)
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.release = 16
}

java {
    withSourcesJar()
    withJavadocJar()
}

jar {
    from 'LICENSE'
}

license {
    header = file("HEADER.txt")
    include("**/*.java") // Only Java files, no resources
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        if (project.hasProperty("artifactoryUsername")) {
            maven {
                name = "Cotton"
                url = "https://server.bbkr.space/artifactory/libs-release"

                credentials {
                    username = artifactoryUsername
                    password = artifactoryPassword
                }
            }
        } else {
            println "Cannot configure artifactory; please define ext.artifactoryUsername and ext.artifactoryPassword before running publish"
        }
    }
}
